import { Module, forwardRef } from '@nestjs/common';
import { TypeOrmModule } from '@nestjs/typeorm';

<% if (hasUtilsModule) { %>import { UtilsModule } from '../../utils/utils.module';<% } %>
<% if (hasAuthModule) { %>import { AuthModule } from '../auth/auth.module';<% } %>
import { <%= className %>Controller } from './<%= fileName %>.controller';
import { <%= className %>Service } from './<%= fileName %>.service';
<% if (hasRoleRelation) { %>import { Role } from '../role/entities/role.entity';<% } %>
import { <%= className %> } from './entities/<%= fileName %>.entity';
import { CustomLogger } from 'src/utils/logger/logger.service';


<%
  const importedRelations = new Set();
  importedRelations.add(className);
%>
<% fields.forEach(field => { %>
  <% if (field.relation && field.relation.type === 'ManyToMany'  && !importedRelations.has(field.relation.target)) { 
       const relationFile = field.relation.target.toLowerCase();
       importedRelations.add(field.relation.target);
  %>
    import { <%= field.relation.target %> } from "../<%= relationFile %>/entities/<%= relationFile %>.entity";
  <% } %>
<% }) %>

@Module({
  imports: [
    TypeOrmModule.forFeature([<% Array.from(importedRelations).forEach((rel, i, arr) => { %>
    <%= rel %><%= i < arr.length - 1 ? ',' : '' %>
  <% }) %>]),
    <% if (hasAuthModule) { %>forwardRef(() => AuthModule),<% } %>
    <% if (hasUtilsModule) { %>UtilsModule,<% } %>
  ],
  controllers: [<%= className %>Controller],
  providers: [<%= className %>Service,CustomLogger],
  exports: [<%= className %>Service],
})
export class <%= className %>Module {}